<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WeTry | Just another dev blog</title>
    <description>Just another dev blog.</description>
    <link>https://wetry.tech/</link>
    <atom:link href="https://wetry.tech/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 02 Sep 2019 17:17:50 +0000</pubDate>
    <lastBuildDate>Mon, 02 Sep 2019 17:17:50 +0000</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>Les secrets du Router d'Angular</title>
        <description>&lt;p&gt;Le routing est un élément inévitable dans une Application Web. Nous allons donc nous concentrer sur cette partie du framework Angular.&lt;/p&gt; &lt;p&gt;Si vous êtes uniquement intéressé pas un point précis du routing, n’hésitez pas à aller voir la &lt;a href=&quot;#toc&quot;&gt;table des matières&lt;/a&gt;.&lt;/p&gt; &lt;h2 id=&quot;cest-quoi-le-routing-&quot;&gt;C’est quoi le routing ?&lt;/h2&gt; &lt;p&gt;Le système de routing est la gestion de l’affichage via l’URL dans le navigateur. Le fait d’avoir l’url &lt;code class=&quot;highlighter-rouge&quot;&gt;/home&lt;/code&gt; affichera des informations différentes de l’url &lt;code class=&quot;highlighter-rouge&quot;&gt;/contact&lt;/code&gt; par exemple.&lt;/p&gt; &lt;p&gt;Pour que cela fonctionne, il faut que ça soit le JavaScript qui ait la main sur l’url à la place du navigateur....</description>
        <pubDate>Thu, 29 Aug 2019 19:22:26 +0000</pubDate>
        <link>https://wetry.tech/les-secrets-du-router-d'angular/</link>
        <guid isPermaLink="true">https://wetry.tech/les-secrets-du-router-d'angular/</guid>
        
        <category>angular</category>
        
        <category>routing</category>
        
        
        <category>documentation</category>
        
      </item>
    
      <item>
        <title>Azure Functions les bases</title>
        <description>&lt;h1 id=&quot;azure-functions--les-bases&quot;&gt;Azure Functions : Les bases&lt;/h1&gt; &lt;p&gt;Une Azure functions peut facilement se résumer en quelques points :&lt;/p&gt; &lt;ul&gt; &lt;li&gt;c’est un service de calcul dans le cloud Azure &lt;strong&gt;serverless&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;qui permet &lt;strong&gt;d’exécuter du code à la demande&lt;/strong&gt;&lt;/li&gt; &lt;li&gt;sans avoir à &lt;strong&gt;provisionner d’infrastructure&lt;/strong&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;En résumé, on va définir sur le cloud un container, dans lequelle les fonctions seront déployées, ensuite, l’exécution, le scaling, la disponibilité et tout autre problème/considérations qui pourrait être lié à l’infrastructure devient la responsabilité d’Azure, nous ne devons nous occuper de rien.&lt;/p&gt; &lt;p&gt;Une fois le code déployer et disponible, il reste une chose à comprendre, c’est comment...</description>
        <pubDate>Sun, 11 Aug 2019 18:26:40 +0000</pubDate>
        <link>https://wetry.tech/azure-functions-les-bases/</link>
        <guid isPermaLink="true">https://wetry.tech/azure-functions-les-bases/</guid>
        
        <category>azure</category>
        
        <category>tutorial</category>
        
        <category>serverless</category>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
